#--------------------------------------------
# ◇Chapter16　本管理アプリ：ログイン認証機能を追加する
#--------------------------------------------



#**************************************************
# 1. コンストラクタ（サインイン後にのみ表示するロジック）追加
#**************************************************
/app/Http/Controllers/BooksController.php を変更します（リスト16.3）。
#--------------------------------------------
#以下[END]までのコードをコピーし「class BooksController 」に追加します。


   //コンストラクタ （このクラスが呼ばれたら最初に処理をする）
    public function __construct()
    {
        $this->middleware('auth');
    }


#[END]--------------------------------------------




#**************************************************
# 2. 「サインイン・レジスター」後に表示するページを変更
#**************************************************
/routes/web.php 以下のルート定義を変更します（リスト16.5）。
#--------------------------------------------

変更前： Route::get('/home', 'HomeController@index')->name('home');
変更後： Route::get('/home', 'BooksController@index')->name('home'); 

#[END]--------------------------------------------




#**************************************************
# * Route::groupを使ったログイン認証
# * 注意）上記1,2の「コンストラクタ」か「Route::group」のどちらかだけの記述にします。
#**************************************************
Route::group(['middleware' => 'auth'], function () {
   //welcomeページを表示
   Route::get("/",function(){
     return view("welcome");
   });

});






========================================================================================================
★ユーザーがログインしたらユーザーが登録した本のみ表示（１ユーザー ✕ １サービス）
========================================================================================================


#**************************************************
#１．ユーザーidを登録できるようにbooksテーブルを変更
#**************************************************
/database/migrations/[yyyy_mm_dd_hhiiss]_create_books_table.php に以下１行を追加します（リスト16.11）。
#--------------------------------------------

$table->bigInteger('user_id'); //Add:user_id

#[END]--------------------------------------------



#**************************************************
#２．テーブルをリセットする
#**************************************************
#cmsディレクトリで実行
cd cms

#Migrate実行
php artisan migrate:reset

#[END]--------------------------------------------



#**************************************************
#３．テーブルを再構築
#**************************************************

php artisan migrate

#[END]--------------------------------------------



#**************************************************
#４．再構築したテーブルを確認
#**************************************************

mysql -u root -p
root  #パスワード
use c9;
show tables;
desc books;

#[END]--------------------------------------------



#**************************************************
#５．コントローラ「BooksController@index」を修正（リスト16.13）
#**************************************************

 $books = Book::where('user_id',Auth::user()->id)->orderBy('created_at', 'asc')->paginate(3);

#[END]--------------------------------------------




#**************************************************
#６．コントローラ「BooksController@store」に追加（リスト16.14）
#**************************************************

$books->user_id  = Auth::user()->id; //追加のコード

#[END]--------------------------------------------




#**************************************************
#７．コントローラ「BooksController@update」を修正（リスト16.16）
#**************************************************

$books = Book::where('user_id',Auth::user()->id)->find($request->id);

#[END]--------------------------------------------




#**************************************************
#８．コントローラ「BooksController@edit」を修正（リスト16.18）
#**************************************************
#修正範囲が多いのでeditメソッドを上書きでもOK

//更新画面
public function edit($book_id){
    $books = Book::where('user_id',Auth::user()->id)->find($book_id);
    return view('booksedit', [
        'book' => $books
    ]);
}
    
#[END]--------------------------------------------










#--------------------------------------------
# ◇Chapter17　本管理アプリ：ファイルのアップロード機能を追加する
#--------------------------------------------



#**************************************************
# 1.  booksテーブルにファイル名カラムを追加
#**************************************************
/database/migrations/******create_books_table.php を変更（リスト17.1）
#--------------------------------------------
#カラムを追加します。

$table->string('item_img');     //Add:item_img

#[END]--------------------------------------------




#**************************************************
# ２. テーブルを再構築
#**************************************************

php artisan migrate:refresh

#[END]--------------------------------------------




#**************************************************
#３．FORM開始タグにenctype属性（enctype="multipart/form-data"）を追加（リスト17.2）
#**************************************************

<form enctype="multipart/form-data" action="{{ url('books') }}"method="POST" class="form-horizontal">

#[END]--------------------------------------------




#**************************************************
#４．ファイル選択を追加（本の登録ボタンの上くらいに）（リスト17.3）
#**************************************************

 <div class="col-sm-6">
    <label>画像</label>
    <input type="file" name="item_img">
</div>

#[END]--------------------------------------------




#**************************************************
#５．ファイルを表示：HTML表示箇所に埋め込む（本のタイトルが表示される場所付近に）（リスト17.4）
#**************************************************
#/resources/views/books.blade.php

<div> <img src="upload/{{$book->item_img}}" width="100"></div>

#[END]--------------------------------------------





#**************************************************
#６．コントローラ「BooksController@store」に追加（リスト17.5）
#**************************************************
# データ登録処理の上に記述しておくこと

  $file = $request->file('item_img'); //file取得
  if( !empty($file) ){                //fileが空かチェック
      $filename = $file->getClientOriginalName();   //ファイル名を取得
      $move = $file->move('../upload/',$filename);  //ファイルを移動：パスが“./upload/”の場合もあるCloud9
  }else{
      $filename = "";
  }

#[END]--------------------------------------------





#**************************************************
#７．コントローラ「BooksController@store」を修正（リスト17.5）
#**************************************************
#登録処理に１行追加

  $books->item_img = $filename;

#[END]--------------------------------------------




#**************************************************
#８．/public/以下にuploadフォルダを空で作成（このフォルダにアップロードする）
#**************************************************
# /public/upload の階層構造になるようにフォルダを作成

